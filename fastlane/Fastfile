fastlane_version '2.53.1'

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

platform :ios do
  version = nil
  build_number = nil

  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(app_identifier: 'th.co.cargolink.mobile', type: 'development', readonly: true)
    match(app_identifier: 'th.co.cargolink.mobile', type: 'appstore', readonly: true)
  end

  desc 'Build the iOS application.'
  private_lane :build do
    certificates
    increment_build_number(xcodeproj: './ios/CargoLinkMobile.xcodeproj')
    
    version = get_version_number(xcodeproj: "./ios/CargoLinkMobile.xcodeproj", target: "CargoLinkMobile")
    build_number = get_build_number(xcodeproj: "./ios/CargoLinkMobile.xcodeproj")

    build_app(workspace: "./ios/CargoLinkMobile.xcworkspace", scheme: "CargoLinkMobile")
    # gym(scheme: 'CargoLinkMobile', project: './ios/CargoLinkMobile.xcodeproj')
  end

  desc 'Ship to Testflight.'
  lane :beta do
    build
    pilot
  end

  after_all do |lane|
    clean_build_artifacts
    tag_string = "v" + version + "-b" + build_number
    commit_version_bump(message: 'Bump build (ios) ' + tag_string, xcodeproj: './ios/CargoLinkMobile.xcodeproj')
    add_git_tag(tag: tag_string)
  end
end

platform :android do
  desc 'Build the Android application.'
  private_lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
  end

  desc 'Ship to Playstore Beta.'
  lane :beta do
    build
    supply(track: 'beta', track_promote_to: 'beta')
    git_commit(path: ['./android/gradle.properties'], message: 'Bump versionCode (android)')
  end

  after_all do |lane|
  end
end

after_all do
  push_to_git_remote
end
